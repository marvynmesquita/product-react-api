[{"/Users/marvyn/Documents/GitHub/product-react-api/src/index.js":"1","/Users/marvyn/Documents/GitHub/product-react-api/src/App.js":"2","/Users/marvyn/Documents/GitHub/product-react-api/src/components/pages/Home.js":"3","/Users/marvyn/Documents/GitHub/product-react-api/src/components/pages/Newproduct.js":"4","/Users/marvyn/Documents/GitHub/product-react-api/src/components/pages/Updateproduct.js":"5","/Users/marvyn/Documents/GitHub/product-react-api/src/components/layouts/Navbar.js":"6","/Users/marvyn/Documents/GitHub/product-react-api/src/components/layouts/Container.js":"7","/Users/marvyn/Documents/GitHub/product-react-api/src/components/update/DeleteBtn.js":"8","/Users/marvyn/Documents/GitHub/product-react-api/src/components/form/SubmitButton.js":"9","/Users/marvyn/Documents/GitHub/product-react-api/src/components/form/Input.js":"10","/Users/marvyn/Documents/GitHub/product-react-api/src/components/form/ProductForm.js":"11"},{"size":468,"mtime":1676312505937,"results":"12","hashOfConfig":"13"},{"size":748,"mtime":1676312505934,"results":"14","hashOfConfig":"13"},{"size":4712,"mtime":1676314394339,"results":"15","hashOfConfig":"13"},{"size":1235,"mtime":1676314402677,"results":"16","hashOfConfig":"13"},{"size":109,"mtime":1676312505937,"results":"17","hashOfConfig":"13"},{"size":696,"mtime":1676312505936,"results":"18","hashOfConfig":"13"},{"size":208,"mtime":1676312505935,"results":"19","hashOfConfig":"13"},{"size":751,"mtime":1676314411141,"results":"20","hashOfConfig":"13"},{"size":223,"mtime":1676312505935,"results":"21","hashOfConfig":"13"},{"size":396,"mtime":1676312505934,"results":"22","hashOfConfig":"13"},{"size":1990,"mtime":1676312505935,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vbi1xx",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"/Users/marvyn/Documents/GitHub/product-react-api/src/index.js",[],[],"/Users/marvyn/Documents/GitHub/product-react-api/src/App.js",["61"],[],"import {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport Container from './components/layouts/Container';\nimport Navbar from './components/layouts/Navbar';\nimport Home from './components/pages/Home';\nimport Newproduct from './components/pages/Newproduct';\nimport Updateproduct from './components/pages/Updateproduct';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar/>\n          <Routes>\n              <Route exact path=\"/\" element={<Home />} > </Route>\n              <Route exact path=\"/newproduct\" element={<Newproduct />} > </Route>\n              <Route exact path=\"/updateproduct\" element={<Updateproduct />} > </Route>\n          </Routes>\n    </Router>\n  )\n}\n\nexport default App;\n","/Users/marvyn/Documents/GitHub/product-react-api/src/components/pages/Home.js",["62"],[],"import styles from './Home.module.css'\nimport { useEffect, useState } from 'react'\nimport Container from '../layouts/Container'\n\nimport DeleteBtn from '../update/DeleteBtn'\n\nimport Input from '../form/Input'\nimport SubmitButton from '../form/SubmitButton'\n\nfunction Home() {\n\n    const toForm = document.querySelector('form')\n    \n\n    const [product, setProduct]= useState([])  \n\n    const [productUpdated, setProductUpdated]= useState([])  \n    \n\n    let productId = ''\n    \n   \n\n    useEffect(() => {\n        fetch(\"http://localhost:5000/product\", {\n            method: \"GET\", \n            headers:  {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            \n            setProduct(data)\n            \n        })\n        .catch((err) => console.log(err))\n    }, [0])\n\n/*\n    function productUpdate(e) {\n        console.log(e.target.value)\n        const productId = e.target.value\n        fetch(`http://ec2-18-230-76-165.sa-east-1.compute.amazonaws.com:3000/product/${productId}`, {\n            method: \"GET\", \n            headers:  {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            \n            \n            productAtributes = data\n            console.log(productAtributes)\n        })\n        .catch((err) => console.log(err))\n\n        \n    }\n*/\n\n\n    function handleChange(e) {\n        setProductUpdated({ ...productUpdated, [e.target.name] : e.target.value })\n     \n        console.log(productUpdated)\n    }\n\n    function getId(e) {\n       \n    \n        productId = e.target.value\n        console.log(productId)\n        window.scrollTo({\n            top: toForm.offsetTop,\n            behavior: 'smooth'\n        })\n    }\n\n    \n    const submit = (e) => {\n        e.preventDefault()\n        \n        atualizarProduto(productUpdated, productId)\n    }\n\n    function atualizarProduto(produtoAtt, Id){\n        fetch(`http://localhost:5000/product/${Id}`, {\n            method: \"PATCH\", \n            headers:  {\n                'Content-Type': 'application/json'\n            },body: JSON.stringify(produtoAtt),\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            console.log(data)\n            \n            \n            \n        })\n    }\n\n    return (\n        <section className={styles.homeSection}>\n            <Container>\n                {\n                    product.map((item) =>{\n                        \n                        \n\n                        return (\n                            <ul>\n                                <li>Nome: {item.name}</li>\n                                <li>Preço: R${item.price}</li>\n                                <li>Codigo de barras: {item.code}</li>\n                                <li>Quantidade no estoque: {item.quantity}</li>\n                                <li>Estoque mínimo: {item.minimum_stock}</li>\n                                <li>Qualidade: {item.quality}</li>\n                                <li>Validade: {item.validate}</li>\n                                <button onClick={getId} value={item._id}>Atualizar Produto</button>\n                                <DeleteBtn id={item._id}/>\n                            </ul>\n                        )\n                    })\n                }\n                <form onSubmit={submit}>\n                    <Input type='text' text='Nome do produto' name='name' placeholder='Insira o nome do produto' handleOnChange={handleChange}  />\n                    <Input type='number' text='Preço do produto' name='price' placeholder='Insira o Preço do produto'handleOnChange={handleChange}  />\n                    <Input type='number' text='Código do produto' name='code' placeholder='Insira o Código do produto' handleOnChange={handleChange}  />\n                    <Input type='number' text='Estoque do produto' name='quantity' placeholder='Insira a quantidade do produto' handleOnChange={handleChange}  />\n                    <Input type='number' text='Estoque mínimo do produto' name='minimum_stock' placeholder='Insira o Estoque mínimo do produto' handleOnChange={handleChange}  />\n                    <Input type='text' text='Qualidade do produto' name='quality' placeholder='Insira a qualidade do produto' handleOnChange={handleChange} />\n                    <Input type='date' text='Validade do produto' name='validate' placeholder='Insira a validade do produto' handleOnChange={handleChange}  />\n                    <SubmitButton text='Atualizar Produto'/>\n                    \n                </form>\n            </Container>\n        </section>\n    )\n    \n}\n\nexport default Home","/Users/marvyn/Documents/GitHub/product-react-api/src/components/pages/Newproduct.js",[],[],"/Users/marvyn/Documents/GitHub/product-react-api/src/components/pages/Updateproduct.js",[],[],"/Users/marvyn/Documents/GitHub/product-react-api/src/components/layouts/Navbar.js",[],[],"/Users/marvyn/Documents/GitHub/product-react-api/src/components/layouts/Container.js",[],[],"/Users/marvyn/Documents/GitHub/product-react-api/src/components/update/DeleteBtn.js",["63","64"],[],"import {Link} from 'react-router-dom'\nimport { useState } from 'react'\n\n\nfunction DeleteBtn(id) {\n   \n   \n   const productId = Object.values(id)\n    \n\n     function deleteProduct(){\n         fetch(`http://localhost:5000/product/${productId[0]}`, {\n            method: \"Delete\", \n            headers:  {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then((data) => {\n            console.log(data)\n            window.location.reload()\n            window.alert('Produto deletado')\n        })\n        .catch(err => console.log(err))\n\n        \n    }\n\n\n    return(\n        <button onClick={deleteProduct}>\n            Deletar Produto\n        </button>\n    )\n}\n\nexport default DeleteBtn","/Users/marvyn/Documents/GitHub/product-react-api/src/components/form/SubmitButton.js",[],[],"/Users/marvyn/Documents/GitHub/product-react-api/src/components/form/Input.js",[],[],"/Users/marvyn/Documents/GitHub/product-react-api/src/components/form/ProductForm.js",["65"],[],"import {useEffect, useState} from 'react'\n\nimport Input from \"./Input\"\nimport SubmitButton from \"./SubmitButton\"\n\nfunction ProductForm({handleSubmit }) {\n\n    const [product, setProduct] = useState([])\n\n    const submit = (e) => {\n        e.preventDefault()\n        console.log(product)\n        handleSubmit(product)\n        \n    }\n\n    function handleChange(e) {\n        setProduct({ ...product, [e.target.name] : e.target.value })\n\n        console.log(product)\n    }\n\n    return(\n        <form onSubmit={submit}>\n            <Input type='text' text='Nome do produto' name='name' placeholder='Insira o nome do produto' handleOnChange={handleChange} value={product.name ? product.name : ''}/>\n            <Input type='number' text='Preço do produto' name='price' placeholder='Insira o Preço do produto'handleOnChange={handleChange} value={product.price ? product.price : ''}/>\n            <Input type='number' text='Código do produto' name='code' placeholder='Insira o Código do produto' handleOnChange={handleChange} value={product.code ? product.code : ''}/>\n            <Input type='number' text='Estoque do produto' name='quantity' placeholder='Insira a quantidade do produto' handleOnChange={handleChange} value={product.quantity ? product.quantity : ''}/>\n            <Input type='number' text='Estoque mínimo do produto' name='minimum_stock' placeholder='Insira o Estoque mínimo do produto' handleOnChange={handleChange} value={product.minimum_stock ? product.minimum_stock : ''}/>\n            <Input type='text' text='Qualidade do produto' name='quality' placeholder='Insira a qualidade do produto'handleOnChange={handleChange} value={product.quality ? product.quality : ''}/>\n            <Input type='date' text='Validade do produto' name='validate' placeholder='Insira a validade do produto' handleOnChange={handleChange} value={product.validate ? product.validate : ''}/>\n            <SubmitButton text='Enviar Produto'/>\n        </form>\n    )\n}\n\nexport default ProductForm",{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":38,"column":9,"nodeType":"72","endLine":38,"endColumn":10},{"ruleId":"66","severity":1,"message":"73","line":1,"column":9,"nodeType":"68","messageId":"69","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"74","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":18},{"ruleId":"66","severity":1,"message":"75","line":1,"column":9,"nodeType":"68","messageId":"69","endLine":1,"endColumn":18},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used."]